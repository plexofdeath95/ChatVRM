/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\public\low_poly_room.glb --transform --output src/model-components/LowPolyRoom.tsx --types 
Files: .\public\low_poly_room.glb [2.92MB] > C:\Users\aaron\Documents\GitHub\ChatVRM\src\model-components\low_poly_room-transformed.glb [647.76KB] (78%)
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations, TransformControls } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useCameraStore } from "@/stores/cameraStore";

type ActionName = "Animation";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_14: THREE.Mesh;
    Object_52: THREE.Mesh;
    Object_91: THREE.Mesh;
    Object_10: THREE.Mesh;
    Object_21: THREE.Mesh;
    Object_26: THREE.Mesh;
    Object_27: THREE.Mesh;
    Object_28: THREE.Mesh;
    Object_32: THREE.Mesh;
    Object_67: THREE.Mesh;
    Object_76: THREE.Mesh;
    Object_77: THREE.Mesh;
    Object_84: THREE.Mesh;
    Object_85: THREE.Mesh;
    Object_98: THREE.Mesh;
    mesh_25_1: THREE.Mesh;
    mesh_25: THREE.Mesh;
    mesh_34: THREE.Mesh;
  };
  materials: {
    LowPoly: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    Screen: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    trees: THREE.MeshPhysicalMaterial;
    Rainbow: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshPhysicalMaterial;
    Floor: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
    PaletteMaterial006: THREE.MeshStandardMaterial;
    Painting: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function LowPolyRoom(props: JSX.IntrinsicElements["group"]) {
  const group = React.useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/low_poly_room-transformed.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);

  const orbitControlsRef = useCameraStore((state) => state.orbitControlsRef);

  const chairGroup = useRef<THREE.Group>(null!);

  useEffect(() => {
    if (chairGroup.current) {
      // Compute bounding box for chairGroup
      const box = new THREE.Box3().setFromObject(chairGroup.current);
      const center = box.getCenter(new THREE.Vector3());
      const size = box.getSize(new THREE.Vector3());

      // Offset so that the bottom center is at the origin
      const offset = new THREE.Vector3(
        center.x,
        center.y - size.y / 2,
        center.z
      );
      chairGroup.current.position.sub(offset);
    }
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="GLTF_SceneRootNode">
          <group name="Cube006_0" position={[-1.407, 0.567, 1.454]}>
            <mesh
              name="Object_4"
              geometry={nodes.Object_4.geometry}
              material={materials.LowPoly}
            />
          </group>
          <group name="Cube007_1" position={[-1.394, 0.755, 1.454]}>
            <mesh
              name="Object_6"
              geometry={nodes.Object_6.geometry}
              material={materials.LowPoly}
            />
          </group>
          <group name="Cube009_2" position={[-1.407, 0.366, 1.454]}>
            <mesh
              name="Object_8"
              geometry={nodes.Object_8.geometry}
              material={materials.LowPoly}
            />
          </group>
          <TransformControls
            onMouseDown={() => {
              if (orbitControlsRef?.current) {
                orbitControlsRef.current.enabled = false;
              }
            }}
            onMouseUp={() => {
              if (orbitControlsRef?.current) {
                orbitControlsRef.current.enabled = true;
              }
            }}
          >
            <group ref={chairGroup}>
              <group
                name="Cube011_5"
                position={[-0.896, 0.397, 0.815]}
                rotation={[0, 0.052, 0]}
              >
                <mesh
                  name="Object_14"
                  geometry={nodes.Object_14.geometry}
                  material={materials.LowPoly}
                />
              </group>
              <group name="Chair_23" position={[-0.896, 0.397, 0.815]}>
                <mesh
                  name="Object_52"
                  geometry={nodes.Object_52.geometry}
                  material={materials.LowPoly}
                />
              </group>
            </group>
          </TransformControls>
          <group name="Shelves002_39" position={[-1.704, 0.833, -1.42]}>
            <mesh
              name="Object_91"
              geometry={nodes.Object_91.geometry}
              material={materials.LowPoly}
            />
          </group>
        </group>
        <mesh
          name="Object_10"
          geometry={nodes.Object_10.geometry}
          material={materials.LowPoly}
          position={[-1.645, 0.541, 1.454]}
        />
        <mesh
          name="Object_21"
          geometry={nodes.Object_21.geometry}
          material={materials.PaletteMaterial001}
          position={[-1.448, 1.354, 1.722]}
          rotation={[-1.746, 0.848, -1.387]}
        />
        <mesh
          name="Object_26"
          geometry={nodes.Object_26.geometry}
          material={materials.PaletteMaterial002}
          position={[-1.77, 1.106, 0.769]}
        />
        <mesh
          name="Object_27"
          geometry={nodes.Object_27.geometry}
          material={materials.Screen}
          position={[-1.77, 1.106, 0.769]}
        />
        <mesh
          name="Object_28"
          geometry={nodes.Object_28.geometry}
          material={materials.PaletteMaterial003}
          position={[-1.77, 1.106, 0.769]}
        />
        <mesh
          name="Object_32"
          geometry={nodes.Object_32.geometry}
          material={materials.trees}
          position={[-9.023, 0.477, -2.995]}
          scale={1.343}
        />
        <mesh
          name="Object_67"
          geometry={nodes.Object_67.geometry}
          material={materials.Rainbow}
          position={[-1.447, 0.929, 0.727]}
        />
        <mesh
          name="Object_76"
          geometry={nodes.Object_76.geometry}
          material={materials.PaletteMaterial004}
          position={[-1.347, 1.173, 0.409]}
        />
        <mesh
          name="Object_77"
          geometry={nodes.Object_77.geometry}
          material={materials.Floor}
          position={[-1.347, 1.173, 0.409]}
        />
        <mesh
          name="Object_84"
          geometry={nodes.Object_84.geometry}
          material={materials.PaletteMaterial005}
          position={[-1.95, 0.169, 0.769]}
        />
        <mesh
          name="Object_85"
          geometry={nodes.Object_85.geometry}
          material={materials.PaletteMaterial006}
          position={[-1.95, 0.169, 0.769]}
        />
        <mesh
          name="Object_98"
          geometry={nodes.Object_98.geometry}
          material={materials.Painting}
          position={[-1.347, 1.173, 0.409]}
        />
        <mesh
          name="mesh_25_1"
          geometry={nodes.mesh_25_1.geometry}
          material={materials.PaletteMaterial002}
          morphTargetDictionary={nodes.mesh_25_1.morphTargetDictionary}
          morphTargetInfluences={nodes.mesh_25_1.morphTargetInfluences}
          position={[-1.712, 1.108, 0.24]}
          rotation={[0, -Math.PI / 6, 0]}
        />
        <mesh
          name="mesh_25"
          geometry={nodes.mesh_25.geometry}
          material={materials.LowPoly}
          morphTargetDictionary={nodes.mesh_25.morphTargetDictionary}
          morphTargetInfluences={nodes.mesh_25.morphTargetInfluences}
          position={[-1.712, 1.108, 0.24]}
          rotation={[0, -Math.PI / 6, 0]}
        />
        <mesh
          name="mesh_34"
          geometry={nodes.mesh_34.geometry}
          material={materials.LowPoly}
          morphTargetDictionary={nodes.mesh_34.morphTargetDictionary}
          morphTargetInfluences={nodes.mesh_34.morphTargetInfluences}
          position={[-1.712, 1.108, 1.333]}
          rotation={[0, Math.PI / 6, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/low_poly_room-transformed.glb");
